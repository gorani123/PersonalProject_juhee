{"version":3,"file":"js/381.5c98644c.js","mappings":"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","sources":["webpack://front-end/./src/components/qna/QnaList.vue","webpack://front-end/src/components/qna/QnaList.vue","webpack://front-end/./src/components/qna/QnaList.vue?9c3a","webpack://front-end/./src/components/qna/QnaList.vue?5e7d","webpack://front-end/./src/services/QnaDataService.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"col-md-8\"},[_c('div',{staticClass:\"input-group mb-3\"},[_c('div',{staticClass:\"col-2\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.searchSelect),expression:\"searchSelect\"}],staticClass:\"form-select\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.searchSelect=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',[_vm._v(\"question\")]),_c('option',[_vm._v(\"questioner\")])])]),_c('div',{staticClass:\"col-9\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.searchKeyword),expression:\"searchKeyword\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Search by Question\"},domProps:{\"value\":(_vm.searchKeyword)},on:{\"input\":function($event){if($event.target.composing)return;_vm.searchKeyword=$event.target.value}}})]),_c('div',{staticClass:\"input-group-append col-1\"},[_c('button',{staticClass:\"btn btn-outline-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.page = 1;\n            _vm.retrieveQna();}}},[_vm._v(\" Search \")])])])]),_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"mb-3\"},[_vm._v(\" Items per Page: \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.pageSize),expression:\"pageSize\"}],on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.pageSize=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},function($event){return _vm.handlePageSizeChange($event)}]}},_vm._l((_vm.pageSizes),function(size){return _c('option',{key:size,domProps:{\"value\":size}},[_vm._v(\" \"+_vm._s(size)+\" \")])}),0)]),_c('b-pagination',{attrs:{\"total-rows\":_vm.count,\"per-page\":_vm.pageSize,\"prev-text\":\"Prev\",\"next-text\":\"Next\"},on:{\"change\":_vm.handlePageChange},model:{value:(_vm.page),callback:function ($$v) {_vm.page=$$v},expression:\"page\"}})],1),_c('table',{staticClass:\"table\"},[_vm._m(0),_vm._l((_vm.qna),function(data,index){return _c('tbody',{key:index},[_c('tr',[_c('td',[_vm._v(_vm._s(data.qno))]),_c('td',[_vm._v(_vm._s(data.question))]),_c('td',[_vm._v(_vm._s(data.questioner))]),_c('td',[_vm._v(_vm._s(data.answer))]),_c('td',[_vm._v(_vm._s(data.answerer))]),_c('td',[_c('router-link',{attrs:{\"to\":'/qna/' + data.qno}},[_c('span',{staticClass:\"badge bg-success\"},[_vm._v(\"Edit\")])])],1)])])})],2)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('thead',[_c('tr',[_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Qno\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Question\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Questioner\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Answer\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Answerer\")])])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- search 관련 div 시작 -->\r\n    <div class=\"col-md-8\">\r\n      <div class=\"input-group mb-3\">\r\n        <div class=\"col-2\">\r\n          <!-- 검색 select 박스 :글제목(question)으로 검색 또는 작성자(questioner)로 검색 -->\r\n          <select class=\"form-select\" v-model=\"searchSelect\">\r\n            <option>question</option>\r\n            <option>questioner</option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- searchDname -> searchQuestion -> searchKeyword 변경 -->\r\n        <div class=\"col-9\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Search by Question\"\r\n            v-model=\"searchKeyword\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"input-group-append col-1\">\r\n          <button\r\n            class=\"btn btn-outline-secondary\"\r\n            type=\"button\"\r\n            @click=\"\r\n              page = 1;\r\n              retrieveQna();\r\n            \"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n        <!--            Todo : 수정 끝 -->\r\n      </div>\r\n    </div>\r\n    <!-- search 관련 div 끝 -->\r\n\r\n    <!--    Todo : page 바 시작 -->\r\n    <div class=\"col-md-12\">\r\n      <div class=\"mb-3\">\r\n        Items per Page:\r\n        <select v-model=\"pageSize\" @change=\"handlePageSizeChange($event)\">\r\n          <option v-for=\"size in pageSizes\" :key=\"size\" :value=\"size\">\r\n            <!-- <!—            size : 3, 6, 9 —> -->\r\n            {{ size }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      <b-pagination\r\n        v-model=\"page\"\r\n        :total-rows=\"count\"\r\n        :per-page=\"pageSize\"\r\n        prev-text=\"Prev\"\r\n        next-text=\"Next\"\r\n        @change=\"handlePageChange\"\r\n      ></b-pagination>\r\n    </div>\r\n    <!-- <!—    Todo : page 바 끝 —> -->\r\n\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Qno</th>\r\n          <th scope=\"col\">Question</th>\r\n          <th scope=\"col\">Questioner</th>\r\n          <th scope=\"col\">Answer</th>\r\n          <th scope=\"col\">Answerer</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody v-for=\"(data, index) in qna\" :key=\"index\">\r\n        <tr>\r\n          <td>{{ data.qno }}</td>\r\n          <td>{{ data.question }}</td>\r\n          <td>{{ data.questioner }}</td>\r\n          <td>{{ data.answer }}</td>\r\n          <td>{{ data.answerer }}</td>\r\n          <td>\r\n            <router-link :to=\"'/qna/' + data.qno\"\r\n              ><span class=\"badge bg-success\">Edit</span></router-link\r\n            >\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>  \r\n  \r\n<script>\r\n// 👀axios 공통함수(springboot 연동을 위한 함수들의 모임) import 필수!!\r\nimport QnaDataService from \"../../services/QnaDataService\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n      qna: [],\r\n      // currentQna: null,\r\n      // currentIndex: -1,\r\n      // dname: \"\", 소스 변경-> searchDname: \"\" 을 searchKeyword, searchSelect 으로 변경\r\n      searchKeyword: \"\",  // 검색어\r\n      searchSelect: \"question\",  // 셀렉트박스 기본값 (선택안했을때_글제목question으로 검색) \r\n\r\n      // 페이징을 위한 변수 정의(최초세팅) 4가지\r\n      page: 1,      // 현재 페이지\r\n      count: 0,     // 전체 데이터 건수\r\n      pageSize: 3,  // 한 페이지당 화면에 보여줄 개수를 결정하는 변수\r\n\r\n      pageSizes: [3, 6, 9]  // 셀렉트박스에 넣을 기본 데이터. 선택창\r\n      };\r\n    },\r\n    methods: {\r\n      // 함수명 : retrieveQna()\r\n      // 매개변수 : this.searchKeyword (검색어), this.searchSelect(셀렉트박스 선택값)\r\n      //           this.page-1 (현재 페이지 번호)\r\n      //           this.pageSize (페이지당 출력할 데이터갯수)\r\n      // 리턴값 : 없음\r\n      retrieveQna() {\r\n        QnaDataService.getAll(\r\n          this.searchSelect,   // 셀렉트박스에서 선택된 값\r\n          this.searchKeyword,  // 검색어\r\n          this.page-1, \r\n          this.pageSize)  // 프엔 자동 페이징처리가 1부터 시작하므로 -1해서 0으로 만들어 줌(스프링부트는 0번부터 매기니까 맞춰줌)\r\n        // axios성공하면 스프링부트 결과가 .then() 안으로 전송됨\r\n        .then((response) => {\r\n          // const(let){속성명, 속성명2} = 데이터객체배열  : 모던자바스크립트 문법 구조분해할당\r\n          const {qna, totalItems} = response.data; // springboot 에서 전송된 맵(map) 정보\r\n          this.qna = qna;         // 스프링 부트에서 전송한 데이터\r\n          this.count = totalItems;  // 스프링부트에서 전송한 페이지정보(총 건수)\r\n          // 디버깅 콘솔에 정보 출력\r\n          console.log(response.data);\r\n        })\r\n        // 실패하면 .catch() 에 에러가 전송됨\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n      },\r\n      // select box 값 변경시 실행되는 함수(재조회)💫\r\n      // event : 사용자가 클릭한 컨트롤이 이벤트객체를 통해 접근,확인가능\r\n      handlePageSizeChange(event) {\r\n        this.pageSize = event.target.value    // 셀렉트박스 값 가져오기 -> 한 페이지당 출력할 데이터 갯수 저장\r\n        this.page = 1;    // 현재페이지를 첫 페이지로 세팅\r\n        // 재조회함수 호출\r\n        this.retrieveQna();\r\n      },\r\n      // 페이지번호 변경 시 실행되는 함수(재조회)🔱\r\n      handlePageChange(value) {\r\n        // 매개변수값으로 현재 페이지번호 변경\r\n        this.page = value;\r\n        // 재조회 함수 호출\r\n        this.retrieveQna();\r\n      }\r\n    },\r\n    // 👀화면이 뜨자마자 실행되는 이벤트(라이프 사이클 함수) : mounted(), created()\r\n    mounted() {\r\n        this.retrieveQna(); // 👀화면 로딩시 전체 조회함수 retrieveQna() 함수 실행\r\n    },\r\n  \r\n  }\r\n</script>\r\n  \r\n<style>\r\n  \r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./QnaList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./QnaList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./QnaList.vue?vue&type=template&id=766ef8b6&\"\nimport script from \"./QnaList.vue?vue&type=script&lang=js&\"\nexport * from \"./QnaList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// 목적 : Dept 정보를 axios 로 CRUD 를 하는 공통 함수들 정의\r\nimport http from \"../http-common\";\r\n\r\nclass QnaDataService {\r\n    // 모든 고객정보 조회 요청 함수 + 글제목 + 글내용 검색 요청 함수 \r\n    // searchSelect : 글제목과 질문자 검색(체크박스로선택)\r\n    // page : 현재 페이지 번호 \r\n    // size : 한 페이지당 화면에 표시할 데이터 갯수\r\n    getAll(searchSelect, searchKeyword, page, size) {\r\n    //   alert(\"확인용2\")\r\n\r\n        // get 방식 통신 요청 -> @GetMapping(\"/api/qna\")\r\n        // 1) 전체 조회 와\r\n        // 2) 질문 조회를 같이 하는 함수 getAll\r\n        return http.get(`/qna?searchSelect=${searchSelect}&searchKeyword=${searchKeyword}&page=${page}&size=${size}`); \r\n    }\r\n\r\n    // CID로 조회 요청 함수\r\n    // get 방식 통신 요청 -> @GetMapping(\"/api/qna/{qno}\"), @PathVariable\r\n    get(qno) {\r\n        return http.get(`/qna/${qno}`)\r\n    }\r\n\r\n    // 고객정보 생성(insert) 요청 함수\r\n    // post 방식 통신 요청 -> @PostMapping(\"/api/qna\"), @RequestBody\r\n    create(data) {\r\n        console.log(data);\r\n        return http.post(\"/qna\", data);\r\n    }\r\n\r\n    // 고객정보 수정(update) 요청 함수\r\n    // put 방식 통신 요청 -> @PutMapping(\"/api/qna/{qno}\"), @RequestBody\r\n    update(qno, data) {\r\n        return http.put(`/qna/${qno}`, data);\r\n    }\r\n\r\n    // 고객정보 삭제(delete) 요청 함수\r\n    // delete 방식 통신 요청 -> @DeleteMapping(\"/api/qna/deletion/{qno}\")\r\n    //                        , @PathVariable  \r\n    delete(qno) {\r\n        return http.delete(`/qna/deletion/${qno}`);\r\n    }\r\n\r\n    // // 고객정보 전체 삭제 요청 함수\r\n    // // delete 방식 통신 요청 -> @DeleteMapping(\"/api/qna/all\")\r\n    // deleteAll() {\r\n    //     return http.delete(\"/qna/all\")\r\n    // }\r\n\r\n}\r\n\r\nexport default new QnaDataService;"],"names":["render","_vm","this","_c","_self","staticClass","directives","name","rawName","value","searchSelect","expression","on","$event","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","val","_value","multiple","_v","searchKeyword","attrs","domProps","composing","page","retrieveQna","pageSize","handlePageSizeChange","_l","pageSizes","size","key","_s","count","handlePageChange","model","callback","$$v","_m","qna","data","index","qno","question","questioner","answer","answerer","staticRenderFns","methods","QnaDataService","then","totalItems","console","catch","mounted","component","getAll","http","get","create","log","update","delete"],"sourceRoot":""}