{"version":3,"file":"js/956.e973d6af.js","mappings":"8JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAQF,EAAII,WAAYF,EAAG,MAAM,CAACG,YAAY,aAAa,CAACH,EAAG,OAAO,CAACA,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,QAAQ,CAACG,YAAY,aAAaC,MAAM,CAAC,IAAM,aAAa,CAACN,EAAIO,GAAG,cAAcL,EAAG,QAAQ,CAACM,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOX,EAAII,WAAWQ,SAAUC,WAAW,wBAAwBR,YAAY,eAAeC,MAAM,CAAC,KAAO,OAAO,GAAK,WAAW,SAAW,GAAG,KAAO,YAAYQ,SAAS,CAAC,MAASd,EAAII,WAAWQ,UAAWG,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,WAAiBlB,EAAImB,KAAKnB,EAAII,WAAY,WAAYY,EAAOC,OAAON,MAAM,OAAOT,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,QAAQ,CAACG,YAAY,aAAaC,MAAM,CAAC,IAAM,WAAW,CAACN,EAAIO,GAAG,YAAYL,EAAG,QAAQ,CAACM,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOX,EAAII,WAAWgB,OAAQP,WAAW,sBAAsBR,YAAY,eAAeC,MAAM,CAAC,KAAO,OAAO,GAAK,SAAS,SAAW,GAAG,KAAO,UAAUQ,SAAS,CAAC,MAASd,EAAII,WAAWgB,QAASL,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,WAAiBlB,EAAImB,KAAKnB,EAAII,WAAY,SAAUY,EAAOC,OAAON,MAAM,OAAOT,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,QAAQ,CAACG,YAAY,aAAaC,MAAM,CAAC,IAAM,eAAe,CAACN,EAAIO,GAAG,gBAAgBL,EAAG,QAAQ,CAACM,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOX,EAAII,WAAWiB,WAAYR,WAAW,0BAA0BR,YAAY,eAAeC,MAAM,CAAC,KAAO,aAAa,GAAK,aAAa,SAAW,GAAG,KAAO,cAAcQ,SAAS,CAAC,MAASd,EAAII,WAAWiB,YAAaN,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,WAAiBlB,EAAImB,KAAKnB,EAAII,WAAY,aAAcY,EAAOC,OAAON,MAAM,OAAOX,EAAIsB,GAAG,KAAKpB,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,SAAS,CAACG,YAAY,uBAAuBU,GAAG,CAAC,MAAQf,EAAIuB,YAAY,CAACvB,EAAIO,GAAG,YAAYL,EAAG,SAAS,CAACG,YAAY,iBAAiBU,GAAG,CAAC,MAAQf,EAAIwB,YAAY,CAACxB,EAAIO,GAAG,cAAeP,EAAIyB,QAASvB,EAAG,MAAM,CAACG,YAAY,sBAAsBC,MAAM,CAAC,KAAO,UAAU,CAACN,EAAIO,GAAG,IAAIP,EAAI0B,GAAG1B,EAAIyB,SAAS,OAAOzB,EAAI2B,OAAO3B,EAAI2B,IAC5+D,EACIC,EAAkB,CAAC,WAAY,IAAI5B,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,QAAQ,CAACG,YAAY,aAAaC,MAAM,CAAC,IAAM,aAAa,CAACN,EAAIO,GAAG,cAAcL,EAAG,QAAQ,CAACG,YAAY,eAAeC,MAAM,CAAC,KAAO,OAAO,GAAK,WAAW,SAAW,GAAG,KAAO,eAC5R,G,oBCiCA,GACAuB,OACA,OACAzB,WAAAA,KACAqB,QAAAA,GAEA,EACAK,QAAAA,CAEAC,OAAAA,GAEAC,EAAAA,EAAAA,IAAAA,GAEAC,MAAAA,IAEA,uBAEAC,QAAAA,IAAAA,EAAAA,KAAAA,IAGAC,OAAAA,IACAD,QAAAA,IAAAA,EAAAA,GAEA,EAEAX,YAEAS,EAAAA,EAAAA,OAAAA,KAAAA,WAAAA,IAAAA,KAAAA,YAEAC,MAAAA,IACAC,QAAAA,IAAAA,EAAAA,MACA,oDAGAC,OAAAA,IACAD,QAAAA,IAAAA,EAAAA,GAEA,EAEAV,YAEAQ,EAAAA,EAAAA,UAAAA,KAAAA,WAAAA,KAEAC,MAAAA,IACAC,QAAAA,IAAAA,EAAAA,MAEA,6BAGAC,OAAAA,IACAD,QAAAA,IAAAA,EAAAA,GAEA,GAGAE,UAKA,gBAIA,mCACA,GCrGkQ,I,UCQ9PC,GAAY,OACd,EACAtC,EACA6B,GACA,EACA,KACA,KACA,MAIF,EAAeS,EAAiB,O,qCChBhC,MAAML,EAKFM,OAAOC,EAAcC,EAAeC,EAAMC,GAMtC,OAAOC,EAAAA,EAAAA,IAAU,qBAAoBJ,mBAA8BC,UAAsBC,UAAaC,IAC1G,CAIAE,IAAIC,GACA,OAAOF,EAAAA,EAAAA,IAAU,QAAOE,IAC5B,CAIAC,OAAOjB,GAEH,OADAK,QAAQa,IAAIlB,GACLc,EAAAA,EAAAA,KAAU,OAAQd,EAC7B,CAIAmB,OAAOH,EAAKhB,GACR,OAAOc,EAAAA,EAAAA,IAAU,QAAOE,IAAOhB,EACnC,CAKAoB,OAAOJ,GACH,OAAOF,EAAAA,EAAAA,UAAa,iBAAgBE,IACxC,EAUJ,WAAmBb,C","sources":["webpack://front-end/./src/components/qna/QnaDetail.vue","webpack://front-end/src/components/qna/QnaDetail.vue","webpack://front-end/./src/components/qna/QnaDetail.vue?1de2","webpack://front-end/./src/components/qna/QnaDetail.vue?7b40","webpack://front-end/./src/services/QnaDataService.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.currentQna)?_c('div',{staticClass:\"edit-form\"},[_c('form',[_c('div',{staticClass:\"mb-3\"},[_c('label',{staticClass:\"form-label\",attrs:{\"for\":\"question\"}},[_vm._v(\"Question\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.currentQna.question),expression:\"currentQna.question\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"question\",\"required\":\"\",\"name\":\"question\"},domProps:{\"value\":(_vm.currentQna.question)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.currentQna, \"question\", $event.target.value)}}})]),_c('div',{staticClass:\"mb-3\"},[_c('label',{staticClass:\"form-label\",attrs:{\"for\":\"answer\"}},[_vm._v(\"Answer\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.currentQna.answer),expression:\"currentQna.answer\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"answer\",\"required\":\"\",\"name\":\"answer\"},domProps:{\"value\":(_vm.currentQna.answer)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.currentQna, \"answer\", $event.target.value)}}})]),_c('div',{staticClass:\"mb-3\"},[_c('label',{staticClass:\"form-label\",attrs:{\"for\":\"questioner\"}},[_vm._v(\"Questioner\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.currentQna.questioner),expression:\"currentQna.questioner\"}],staticClass:\"form-control\",attrs:{\"type\":\"questioner\",\"id\":\"questioner\",\"required\":\"\",\"name\":\"questioner\"},domProps:{\"value\":(_vm.currentQna.questioner)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.currentQna, \"questioner\", $event.target.value)}}})]),_vm._m(0)]),_c('div',{staticClass:\"mb-3\"},[_c('button',{staticClass:\"btn btn-primary me-3\",on:{\"click\":_vm.updateQna}},[_vm._v(\"Update\")]),_c('button',{staticClass:\"btn btn-danger\",on:{\"click\":_vm.deleteQna}},[_vm._v(\"Delete\")])]),(_vm.message)?_c('div',{staticClass:\"alert alert-success\",attrs:{\"role\":\"alert\"}},[_vm._v(\" \"+_vm._s(_vm.message)+\" \")]):_vm._e()]):_vm._e()\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"mb-3\"},[_c('label',{staticClass:\"form-label\",attrs:{\"for\":\"answerer\"}},[_vm._v(\"Answerer\")]),_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"answerer\",\"required\":\"\",\"name\":\"answerer\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div v-if=\"currentQna\" class=\"edit-form\">\r\n    <form>\r\n    <div class=\"mb-3\">\r\n      <label for=\"question\" class=\"form-label\">Question</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"question\" required name=\"question\"\r\n             v-model=\"currentQna.question\">\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"answer\" class=\"form-label\">Answer</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"answer\" required name=\"answer\" v-model=\"currentQna.answer\">\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"questioner\" class=\"form-label\">Questioner</label>\r\n      <input type=\"questioner\" class=\"form-control\" id=\"questioner\" required name=\"questioner\" v-model=\"currentQna.questioner\">\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"answerer\" class=\"form-label\">Answerer</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"answerer\" required name=\"answerer\">\r\n    </div>\r\n  </form>\r\n  \r\n    <!-- 정보 업데이트/삭제 버튼 -->\r\n    <div class=\"mb-3\">\r\n      <button @click=\"updateQna\" class=\"btn btn-primary me-3\">Update</button>\r\n      <button @click=\"deleteQna\" class=\"btn btn-danger\">Delete</button>\r\n    </div>\r\n\r\n    <div class=\"alert alert-success\" role=\"alert\" v-if=\"message\">\r\n      {{ message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport QnaDataService from '../../services/QnaDataService';\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentQna: null,\r\n      message: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    // 고객번호(qno)로 조회 요청하는 함수\r\n    getQna(qno) {\r\n      // axios 공통함수 호출\r\n      QnaDataService.get(qno)\r\n      // 성공하면 .then() 결과가 리턴됨\r\n      .then(response => {\r\n        // springboot 결과를 리턴함(고객 객체)\r\n        this.currentQna = response.data;\r\n        // 콘솔 로그 출력\r\n        console.log(response.data);\r\n      })\r\n      // 실패하면 .catch() 에러메세지가 리턴됨\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    },\r\n    // qno로 고객정보를 수정 요청하는 함수\r\n    updateQna() {\r\n      // axios 공통함수 호출\r\n      QnaDataService.update(this.currentQna.qno, this.currentQna)\r\n      // 성공하면 then() 결과가 전송됨\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.message = \"The Qna was updated successfully!\";\r\n      })\r\n      // 실패하면 .catch() 에러메세지가 전송됨\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    },\r\n    // qno 로 고객정보를 삭제 요청하는 함수\r\n    deleteQna() {\r\n      // axios 공통함수 호출\r\n      QnaDataService.delete(this.currentQna.qno)\r\n      // 성공하면 then() 결과가 전송됨\r\n      .then(response => {\r\n        console.log(response.data);\r\n        // 첫페이지(전체목록_조회_페이지) 강제 이동 : /\r\n        this.$router.push(\"/qna\");\r\n      })\r\n      // 실패하면 .catch() 에러메세지가 전송됨\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  },\r\n  // 화면이 뜨자 마자 실행되는 이벤트\r\n  mounted() {\r\n    // 클라이언트쪽 디버깅\r\n    // alert(this.$route.params.qno);\r\n    // console.log(this.$route.params.qno);\r\n    \r\n    this.message = \"\";\r\n  //  this.$route.params.qno : 이전페이지에서 전송한 매개변수는 $route.params 안에 있음\r\n  // $route 객체 : 주로 url 매개변수 정보들이 있음\r\n  // router/index.js 상세페이지 url의 매개변수명 : qno \r\n    this.getQna(this.$route.params.qno);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n  .edit-form {\r\n    max-width: 300px;\r\n    margin: auto;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./QnaDetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./QnaDetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./QnaDetail.vue?vue&type=template&id=4278195b&\"\nimport script from \"./QnaDetail.vue?vue&type=script&lang=js&\"\nexport * from \"./QnaDetail.vue?vue&type=script&lang=js&\"\nimport style0 from \"./QnaDetail.vue?vue&type=style&index=0&id=4278195b&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// 목적 : Dept 정보를 axios 로 CRUD 를 하는 공통 함수들 정의\r\nimport http from \"../http-common\";\r\n\r\nclass QnaDataService {\r\n    // 모든 고객정보 조회 요청 함수 + 글제목 + 글내용 검색 요청 함수 \r\n    // searchSelect : 글제목과 질문자 검색(체크박스로선택)\r\n    // page : 현재 페이지 번호 \r\n    // size : 한 페이지당 화면에 표시할 데이터 갯수\r\n    getAll(searchSelect, searchKeyword, page, size) {\r\n    //   alert(\"확인용2\")\r\n\r\n        // get 방식 통신 요청 -> @GetMapping(\"/api/qna\")\r\n        // 1) 전체 조회 와\r\n        // 2) 질문 조회를 같이 하는 함수 getAll\r\n        return http.get(`/qna?searchSelect=${searchSelect}&searchKeyword=${searchKeyword}&page=${page}&size=${size}`); \r\n    }\r\n\r\n    // CID로 조회 요청 함수\r\n    // get 방식 통신 요청 -> @GetMapping(\"/api/qna/{qno}\"), @PathVariable\r\n    get(qno) {\r\n        return http.get(`/qna/${qno}`)\r\n    }\r\n\r\n    // 고객정보 생성(insert) 요청 함수\r\n    // post 방식 통신 요청 -> @PostMapping(\"/api/qna\"), @RequestBody\r\n    create(data) {\r\n        console.log(data);\r\n        return http.post(\"/qna\", data);\r\n    }\r\n\r\n    // 고객정보 수정(update) 요청 함수\r\n    // put 방식 통신 요청 -> @PutMapping(\"/api/qna/{qno}\"), @RequestBody\r\n    update(qno, data) {\r\n        return http.put(`/qna/${qno}`, data);\r\n    }\r\n\r\n    // 고객정보 삭제(delete) 요청 함수\r\n    // delete 방식 통신 요청 -> @DeleteMapping(\"/api/qna/deletion/{qno}\")\r\n    //                        , @PathVariable  \r\n    delete(qno) {\r\n        return http.delete(`/qna/deletion/${qno}`);\r\n    }\r\n\r\n    // // 고객정보 전체 삭제 요청 함수\r\n    // // delete 방식 통신 요청 -> @DeleteMapping(\"/api/qna/all\")\r\n    // deleteAll() {\r\n    //     return http.delete(\"/qna/all\")\r\n    // }\r\n\r\n}\r\n\r\nexport default new QnaDataService;"],"names":["render","_vm","this","_c","_self","currentQna","staticClass","attrs","_v","directives","name","rawName","value","question","expression","domProps","on","$event","target","composing","$set","answer","questioner","_m","updateQna","deleteQna","message","_s","_e","staticRenderFns","data","methods","getQna","QnaDataService","then","console","catch","mounted","component","getAll","searchSelect","searchKeyword","page","size","http","get","qno","create","log","update","delete"],"sourceRoot":""}